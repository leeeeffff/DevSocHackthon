The course plan is structured to build a solid foundation in computer science and progress towards advanced topics while ensuring prerequisites are met.

In the first term (T1), students start with Programming Fundamentals, which introduces them to the basics of programming without any prerequisites. This course lays the groundwork for understanding how to write code and think logically.

Discrete Mathematics is also included in T1 to provide students with a fundamental understanding of mathematical concepts that are essential in computer science.

Mathematics 1A in T1 builds on the mathematical foundations established in Discrete Mathematics, preparing students for more advanced math topics in later terms.

Moving to the second term (T2), students delve into Computer Systems Fundamentals, requiring the knowledge gained in Programming Fundamentals. This course provides an understanding of computer architecture and how software interacts with hardware.

Software Engineering Fundamentals in T2 builds on the programming skills learned in the first term and introduces students to software design principles and development methodologies.

Data Structures and Algorithms in T2 is a crucial course that requires knowledge from Programming Fundamentals. This course teaches students how to organize and manipulate data efficiently.

In the third term (T3), students advance to Object-Oriented Design and Programming, which requires knowledge from Software Engineering Fundamentals and Data Structures and Algorithms. This course focuses on object-oriented programming, a critical paradigm in modern software development.

Computer Science Project in T3 requires students to apply the knowledge and skills acquired in previous courses to a larger project, integrating software engineering practices and data